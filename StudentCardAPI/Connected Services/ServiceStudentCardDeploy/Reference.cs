//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceStudentCardDeploy {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    public partial class Account : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AccountAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CardIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuotaFeuillesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UiDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AccountAmount {
            get {
                return this.AccountAmountField;
            }
            set {
                if ((this.AccountAmountField.Equals(value) != true)) {
                    this.AccountAmountField = value;
                    this.RaisePropertyChanged("AccountAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CardID {
            get {
                return this.CardIDField;
            }
            set {
                if ((this.CardIDField.Equals(value) != true)) {
                    this.CardIDField = value;
                    this.RaisePropertyChanged("CardID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuotaFeuilles {
            get {
                return this.QuotaFeuillesField;
            }
            set {
                if ((this.QuotaFeuillesField.Equals(value) != true)) {
                    this.QuotaFeuillesField = value;
                    this.RaisePropertyChanged("QuotaFeuilles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UiD {
            get {
                return this.UiDField;
            }
            set {
                if ((this.UiDField.Equals(value) != true)) {
                    this.UiDField = value;
                    this.RaisePropertyChanged("UiD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceStudentCardDeploy.IServiceAccount")]
    public interface IServiceAccount {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAccount/AddAmountByUsername", ReplyAction="http://tempuri.org/IServiceAccount/AddAmountByUsernameResponse")]
        Client.ServiceStudentCardDeploy.Account AddAmountByUsername(string Username, double QuotaCHF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAccount/AddAmountByUsername", ReplyAction="http://tempuri.org/IServiceAccount/AddAmountByUsernameResponse")]
        System.Threading.Tasks.Task<Client.ServiceStudentCardDeploy.Account> AddAmountByUsernameAsync(string Username, double QuotaCHF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAccount/AddAmountByUID", ReplyAction="http://tempuri.org/IServiceAccount/AddAmountByUIDResponse")]
        Client.ServiceStudentCardDeploy.Account AddAmountByUID(int UID, double QuotaCHF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAccount/AddAmountByUID", ReplyAction="http://tempuri.org/IServiceAccount/AddAmountByUIDResponse")]
        System.Threading.Tasks.Task<Client.ServiceStudentCardDeploy.Account> AddAmountByUIDAsync(int UID, double QuotaCHF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAccount/AddUser", ReplyAction="http://tempuri.org/IServiceAccount/AddUserResponse")]
        Client.ServiceStudentCardDeploy.Account AddUser(string Username, int CardID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAccount/AddUser", ReplyAction="http://tempuri.org/IServiceAccount/AddUserResponse")]
        System.Threading.Tasks.Task<Client.ServiceStudentCardDeploy.Account> AddUserAsync(string Username, int CardID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAccount/dimAmount", ReplyAction="http://tempuri.org/IServiceAccount/dimAmountResponse")]
        Client.ServiceStudentCardDeploy.Account dimAmount(string Username, int QuotaToPrint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAccount/dimAmount", ReplyAction="http://tempuri.org/IServiceAccount/dimAmountResponse")]
        System.Threading.Tasks.Task<Client.ServiceStudentCardDeploy.Account> dimAmountAsync(string Username, int QuotaToPrint);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceAccountChannel : Client.ServiceStudentCardDeploy.IServiceAccount, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceAccountClient : System.ServiceModel.ClientBase<Client.ServiceStudentCardDeploy.IServiceAccount>, Client.ServiceStudentCardDeploy.IServiceAccount {
        
        public ServiceAccountClient() {
        }
        
        public ServiceAccountClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceAccountClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceAccountClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceAccountClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Client.ServiceStudentCardDeploy.Account AddAmountByUsername(string Username, double QuotaCHF) {
            return base.Channel.AddAmountByUsername(Username, QuotaCHF);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceStudentCardDeploy.Account> AddAmountByUsernameAsync(string Username, double QuotaCHF) {
            return base.Channel.AddAmountByUsernameAsync(Username, QuotaCHF);
        }
        
        public Client.ServiceStudentCardDeploy.Account AddAmountByUID(int UID, double QuotaCHF) {
            return base.Channel.AddAmountByUID(UID, QuotaCHF);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceStudentCardDeploy.Account> AddAmountByUIDAsync(int UID, double QuotaCHF) {
            return base.Channel.AddAmountByUIDAsync(UID, QuotaCHF);
        }
        
        public Client.ServiceStudentCardDeploy.Account AddUser(string Username, int CardID) {
            return base.Channel.AddUser(Username, CardID);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceStudentCardDeploy.Account> AddUserAsync(string Username, int CardID) {
            return base.Channel.AddUserAsync(Username, CardID);
        }
        
        public Client.ServiceStudentCardDeploy.Account dimAmount(string Username, int QuotaToPrint) {
            return base.Channel.dimAmount(Username, QuotaToPrint);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceStudentCardDeploy.Account> dimAmountAsync(string Username, int QuotaToPrint) {
            return base.Channel.dimAmountAsync(Username, QuotaToPrint);
        }
    }
}
