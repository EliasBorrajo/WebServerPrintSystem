//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceStudentCard {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    public partial class Account : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AccountAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceStudentCard.Transaction[] ListeTransacField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewQuotaFeuilleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AccountAmount {
            get {
                return this.AccountAmountField;
            }
            set {
                if ((this.AccountAmountField.Equals(value) != true)) {
                    this.AccountAmountField = value;
                    this.RaisePropertyChanged("AccountAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((this.AccountIdField.Equals(value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceStudentCard.Transaction[] ListeTransac {
            get {
                return this.ListeTransacField;
            }
            set {
                if ((object.ReferenceEquals(this.ListeTransacField, value) != true)) {
                    this.ListeTransacField = value;
                    this.RaisePropertyChanged("ListeTransac");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewQuotaFeuille {
            get {
                return this.NewQuotaFeuilleField;
            }
            set {
                if ((this.NewQuotaFeuilleField.Equals(value) != true)) {
                    this.NewQuotaFeuilleField = value;
                    this.RaisePropertyChanged("NewQuotaFeuille");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UID {
            get {
                return this.UIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UIDField, value) != true)) {
                    this.UIDField = value;
                    this.RaisePropertyChanged("UID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Transaction", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    public partial class Transaction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TranAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TranDateHourField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((this.AccountIdField.Equals(value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Services {
            get {
                return this.ServicesField;
            }
            set {
                if ((object.ReferenceEquals(this.ServicesField, value) != true)) {
                    this.ServicesField = value;
                    this.RaisePropertyChanged("Services");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TranAmount {
            get {
                return this.TranAmountField;
            }
            set {
                if ((this.TranAmountField.Equals(value) != true)) {
                    this.TranAmountField = value;
                    this.RaisePropertyChanged("TranAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TranDateHour {
            get {
                return this.TranDateHourField;
            }
            set {
                if ((this.TranDateHourField.Equals(value) != true)) {
                    this.TranDateHourField = value;
                    this.RaisePropertyChanged("TranDateHour");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceStudentCard.IServiceAccount")]
    public interface IServiceAccount {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAccount/AddAmountByUsername", ReplyAction="http://tempuri.org/IServiceAccount/AddAmountByUsernameResponse")]
        Client.ServiceStudentCard.Account AddAmountByUsername(string Username, double QuotaCHF, string Services);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAccount/AddAmountByUsername", ReplyAction="http://tempuri.org/IServiceAccount/AddAmountByUsernameResponse")]
        System.Threading.Tasks.Task<Client.ServiceStudentCard.Account> AddAmountByUsernameAsync(string Username, double QuotaCHF, string Services);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAccount/AddAmountByUID", ReplyAction="http://tempuri.org/IServiceAccount/AddAmountByUIDResponse")]
        Client.ServiceStudentCard.Account AddAmountByUID(string UID, double QuotaCHF, string Services);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAccount/AddAmountByUID", ReplyAction="http://tempuri.org/IServiceAccount/AddAmountByUIDResponse")]
        System.Threading.Tasks.Task<Client.ServiceStudentCard.Account> AddAmountByUIDAsync(string UID, double QuotaCHF, string Services);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceAccountChannel : Client.ServiceStudentCard.IServiceAccount, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceAccountClient : System.ServiceModel.ClientBase<Client.ServiceStudentCard.IServiceAccount>, Client.ServiceStudentCard.IServiceAccount {
        
        public ServiceAccountClient() {
        }
        
        public ServiceAccountClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceAccountClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceAccountClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceAccountClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Client.ServiceStudentCard.Account AddAmountByUsername(string Username, double QuotaCHF, string Services) {
            return base.Channel.AddAmountByUsername(Username, QuotaCHF, Services);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceStudentCard.Account> AddAmountByUsernameAsync(string Username, double QuotaCHF, string Services) {
            return base.Channel.AddAmountByUsernameAsync(Username, QuotaCHF, Services);
        }
        
        public Client.ServiceStudentCard.Account AddAmountByUID(string UID, double QuotaCHF, string Services) {
            return base.Channel.AddAmountByUID(UID, QuotaCHF, Services);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceStudentCard.Account> AddAmountByUIDAsync(string UID, double QuotaCHF, string Services) {
            return base.Channel.AddAmountByUIDAsync(UID, QuotaCHF, Services);
        }
    }
}
